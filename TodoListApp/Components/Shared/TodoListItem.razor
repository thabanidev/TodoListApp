<div class="flex flex-col justify-between border-b-2 border-gray-200 @(Todo.IsDone ? "opacity-50" : "opacity-100") bg-white transition rounded p-4 gap-3">
    <div class="flex justify-between items-center">
        <div class="flex justify-center items-center h-content gap-2 font-semibold text-xl">
            <span class="text-2xl select-none">@(Todo.IsDone ? "😏" : "😒")</span>
            @if (isEditing)
            {
                <input type="text" @bind="editTitle" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" />
            }
            else
            {
                <span class="@(Todo.IsDone ? "line-through text-gray-500 select-none" : "") text-balance">@Todo.Title</span>
            }
        </div>
        <div class="flex justify-between items-center gap-2">
            <button @onclick="() => Todo.IsDone = !Todo.IsDone" class="bg-green-600 hover:bg-green-500 p-2 active:bg-green-400 focus:outline-none focus:shadow-outline flex justify-center items-center">
                <svg width="1.25rem" height="1.25rem" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M4.89163 13.2687L9.16582 17.5427L18.7085 8" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </button>
            @if (isEditing)
            {
                <button @onclick="Save" class="bg-blue-500 hover:bg-blue-400 p-2 active:bg-blue-300 flex justify-center items-center text-xl">
                    <svg width="1.25rem" height="1.25rem" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M17 20.75H7C6.27065 20.75 5.57118 20.4603 5.05546 19.9445C4.53973 19.4288 4.25 18.7293 4.25 18V6C4.25 5.27065 4.53973 4.57118 5.05546 4.05546C5.57118 3.53973 6.27065 3.25 7 3.25H14.5C14.6988 3.25018 14.8895 3.32931 15.03 3.47L19.53 8C19.6707 8.14052 19.7498 8.33115 19.75 8.53V18C19.75 18.7293 19.4603 19.4288 18.9445 19.9445C18.4288 20.4603 17.7293 20.75 17 20.75ZM7 4.75C6.66848 4.75 6.35054 4.8817 6.11612 5.11612C5.8817 5.35054 5.75 5.66848 5.75 6V18C5.75 18.3315 5.8817 18.6495 6.11612 18.8839C6.35054 19.1183 6.66848 19.25 7 19.25H17C17.3315 19.25 17.6495 19.1183 17.8839 18.8839C18.1183 18.6495 18.25 18.3315 18.25 18V8.81L14.19 4.75H7Z" fill="#FFFFFF" />
                        <path d="M16.75 20H15.25V13.75H8.75V20H7.25V13.5C7.25 13.1685 7.3817 12.8505 7.61612 12.6161C7.85054 12.3817 8.16848 12.25 8.5 12.25H15.5C15.8315 12.25 16.1495 12.3817 16.3839 12.6161C16.6183 12.8505 16.75 13.1685 16.75 13.5V20Z" fill="#FFFFFF" />
                        <path d="M12.47 8.75H8.53001C8.3606 8.74869 8.19311 8.71403 8.0371 8.64799C7.88109 8.58195 7.73962 8.48582 7.62076 8.36511C7.5019 8.24439 7.40798 8.10144 7.34437 7.94443C7.28075 7.78741 7.24869 7.61941 7.25001 7.45V4H8.75001V7.25H12.25V4H13.75V7.45C13.7513 7.61941 13.7193 7.78741 13.6557 7.94443C13.592 8.10144 13.4981 8.24439 13.3793 8.36511C13.2604 8.48582 13.1189 8.58195 12.9629 8.64799C12.8069 8.71403 12.6394 8.74869 12.47 8.75Z" fill="#FFFFFF" />
                    </svg>
                </button>
            }
            else
            {
                <button @onclick="() => isEditing = true" class="bg-blue-500 p-2 hover:bg-blue-400 active:bg-blue-300 flex justify-center items-center">
                    <svg width="1.25rem" height="1.25rem" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M21.2799 6.40005L11.7399 15.94C10.7899 16.89 7.96987 17.33 7.33987 16.7C6.70987 16.07 7.13987 13.25 8.08987 12.3L17.6399 2.75002C17.8754 2.49308 18.1605 2.28654 18.4781 2.14284C18.7956 1.99914 19.139 1.92124 19.4875 1.9139C19.8359 1.90657 20.1823 1.96991 20.5056 2.10012C20.8289 2.23033 21.1225 2.42473 21.3686 2.67153C21.6147 2.91833 21.8083 3.21243 21.9376 3.53609C22.0669 3.85976 22.1294 4.20626 22.1211 4.55471C22.1128 4.90316 22.0339 5.24635 21.8894 5.5635C21.7448 5.88065 21.5375 6.16524 21.2799 6.40005V6.40005Z" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                        <path d="M11 4H6C4.93913 4 3.92178 4.42142 3.17163 5.17157C2.42149 5.92172 2 6.93913 2 8V18C2 19.0609 2.42149 20.0783 3.17163 20.8284C3.92178 21.5786 4.93913 22 6 22H17C19.21 22 20 20.2 20 18V13" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                    </svg>
                </button>
            }
            <button @onclick="() => OnDelete.InvokeAsync(Todo)" class="bg-red-500 p-2 hover:bg-red-400 active:bg-red-300 flex justify-center items-center font-extrabold flex justify-center items-center text-xl text-white">
                <svg width="1.25rem" height="1.25rem" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M18 6L17.1991 18.0129C17.129 19.065 17.0939 19.5911 16.8667 19.99C16.6666 20.3412 16.3648 20.6235 16.0011 20.7998C15.588 21 15.0607 21 14.0062 21H9.99377C8.93927 21 8.41202 21 7.99889 20.7998C7.63517 20.6235 7.33339 20.3412 7.13332 19.99C6.90607 19.5911 6.871 19.065 6.80086 18.0129L6 6M4 6H20M16 6L15.7294 5.18807C15.4671 4.40125 15.3359 4.00784 15.0927 3.71698C14.8779 3.46013 14.6021 3.26132 14.2905 3.13878C13.9376 3 13.523 3 12.6936 3H11.3064C10.477 3 10.0624 3 9.70951 3.13878C9.39792 3.26132 9.12208 3.46013 8.90729 3.71698C8.66405 4.00784 8.53292 4.40125 8.27064 5.18807L8 6M14 10V17M10 10V17" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </button>
        </div>
    </div>
    <div class="flex justify-between items-center">
        <span class="text-xs text-gray-500">
            Created: @Todo.DateCreated.ToShortDateString() (@Todo.DateCreated.ToShortTimeString())
        </span>
        @if (Todo.DateEdited is not null)
        {
            <span class="text-xs text-gray-500">
                Edited: @Todo.DateEdited?.ToShortDateString() (@Todo.DateEdited?.ToShortTimeString())
            </span>
        }
    </div>
</div>

@code {
    [Parameter]
    public TodoItem Todo { get; set; } = default!;

    [Parameter]
    public EventCallback<TodoItem> OnDelete { get; set; }

    private string editTitle { get; set; } = string.Empty;
    private bool isEditing { get; set; } = false;

    protected override void OnParametersSet()
    {
        editTitle = Todo.Title;
    }

    void Save()
    {
        Todo.Title = editTitle;
        Todo.DateEdited = DateTime.Now;
        isEditing = false;
    }
}